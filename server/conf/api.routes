->     /login                          login.Routes

###
#  summary: Query all todos
#  description: >
#      Returns a list of all todos
#  parameters:
#  - in: header
#    name: x-auth-token
#    schema:
#      type: string
#  responses:
#    200:
#      description: success
#      schema:
#        type: array
#        items:
#          $ref: '#/definitions/em.model.TodoV'
###
GET    /todo                     controllers.TodoController.getTodos

###
#  summary: Delete a todo
#  parameters:
#  - in: header
#    name: x-auth-token
#    schema:
#      type: string
#  responses:
#    200:
#      description: success
#      schema:
#        type: string
###
DELETE    /todo/:id                     controllers.TodoController.deleteTodo(id: String)

###
#  summary: Delete a todo
#  parameters:
#  - in: header
#    name: x-auth-token
#    schema:
#      type: string
#  responses:
#    200:
#      description: success
#      schema:
#        type: string
###
DELETE    /todo/:todoId/file/:id                     controllers.TodoController.deleteFile(id: String, todoId: String)

###
#  summary: Update todos
#  parameters:
#  - in: header
#    name: x-auth-token
#    schema:
#      type: string
#  parameters:
#  - name: body
#    schema:
#      type: array
#      items:
#        $ref: '#/definitions/em.model.TodoV'
#    description: Date and Timestamp should be in the format 'yyyy-MM-dd HH:mm:ss' (example "2017-05-23 23:05:22")
#  responses:
#    200:
#      description: success
###
PUT    /todo                     controllers.TodoController.updateTodos

###
#  summary: Get the public VAPID key of this server
#  responses:
#    200:
#      description: success
#      schema:
#        type: string
###
GET /push/vapid                     controllers.PushController.getVapidKey

###
#  summary: Register a push subscription for a user
#  parameters:
#  - in: header
#    name: x-auth-token
#    schema:
#      type: string
#  responses:
#    200:
#      description: success
#      schema:
#        type: string
###
POST /push/register                 controllers.PushController.registerSubscription

###
#  summary: Get subscriptions with device infos
#  parameters:
#  - in: header
#    name: x-auth-token
#    schema:
#      type: string
#  responses:
#    200:
#      description: success
#      schema:
#        type: string
###
GET /push/register                 controllers.PushController.getSubscriptions

###
#  summary: Get subscriptions with device infos
#  parameters:
#  - in: header
#    name: x-auth-token
#    schema:
#      type: string
#  responses:
#    200:
#      description: success
#      schema:
#        type: string
###
DELETE /push/register/:id                 controllers.PushController.deleteSubscription(id: Int)